import pytest
from numbers_parsing import *


@pytest.mark.parametrize("input_value, expected_output", [
    ('ноль', 0),
    ('один', 1),
    ('десять', 10),
    ('пятнадцать', 15),
    ('двадцать', 20),
    ('двадцать пять', 25),
    ('сорок два', 42),
    ('девяносто девять', 99),
    ('сто', 100),
    ('сто один', 101),
    ('сто десять', 110),
    ('сто пятнадцать', 115),
    ('сто девяносто девять', 199),
    ('триста сорок два', 342),
    ('девятьсот девяносто девять', 999),
    ('одна тысяча', 1000),
    ('одна тысяча один', 1001),
    ('одна тысяча десять', 1010),
    ('одна тысяча сто', 1100),
    ('одна тысяча сто пятнадцать', 1115),
    ('две тысячи', 2000),
    ('две тысячи двадцать пять', 2025),
    ('десять тысяч', 10000),
    ('двадцать одна тысяча', 21000),
    ('девятьсот девяносто девять тысяч девятьсот девяносто девять', 999999),
    ('один миллион', 1000000),
    ('один миллион один', 1000001),
    ('один миллион сто', 1000100),
    ('один миллион сто тысяч', 1100000),
    ('девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять', 999999999),
    ('минус один', -1),
    ('минус пятьдесят два', -52),
    ('минус одна тысяча', -1000),
    ('минус один миллион', -1000000)
])
def test_parse_word_to_number(input_value, expected_output) -> None:
    result = parse_word_to_number(input_value)

    # Assert
    assert result == expected_output


@pytest.mark.parametrize("input_value, expected_output", [
    (0, 'ноль'),
    (1, 'один'),
    (10, 'десять'),
    (15, 'пятнадцать'),
    (20, 'двадцать'),
    (25, 'двадцать пять'),
    (42, 'сорок два'),
    (99, 'девяносто девять'),
    (100, 'сто'),
    (101, 'сто один'),
    (110, 'сто десять'),
    (115, 'сто пятнадцать'),
    (199, 'сто девяносто девять'),
    (342, 'триста сорок два'),
    (999, 'девятьсот девяносто девять'),
    (1000, 'одна тысяча'),
    (1001, 'одна тысяча один'),
    (1010, 'одна тысяча десять'),
    (1100, 'одна тысяча сто'),
    (1115, 'одна тысяча сто пятнадцать'),
    (2000, 'две тысячи'),
    (2025, 'две тысячи двадцать пять'),
    (10000, 'десять тысяч'),
    (21000, 'двадцать одна тысяча'),
    (999999, 'девятьсот девяносто девять тысяч девятьсот девяносто девять'),
    (1000000, 'один миллион'),
    (1000001, 'один миллион один'),
    (1000100, 'один миллион сто'),
    (1100000, 'один миллион сто тысяч'),
    (999999999, 'девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять'),
    (-1, 'минус один'),
    (-52, 'минус пятьдесят два'),
    (-1000, 'минус одна тысяча'),
    (-1000000, 'минус один миллион')
])
def test_parse_number_to_word(input_value, expected_output) -> None:
    result = parse_number_to_word(input_value)

    # Assert
    assert result == expected_output
